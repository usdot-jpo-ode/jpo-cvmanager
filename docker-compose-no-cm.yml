services:
  cvmanager_api:
    build:
      context: services
      dockerfile: Dockerfile.api
    image: jpo_cvmanager_api:latest
    restart: always
    extra_hosts:
      ${WEBAPP_DOMAIN}: ${WEBAPP_HOST_IP}
      ${KEYCLOAK_DOMAIN}: ${KC_HOST_IP}
    ports:
      - '8081:5000'
    environment:
      PG_DB_HOST: ${PG_DB_HOST}
      PG_DB_USER: ${PG_DB_USER}
      PG_DB_PASS: ${PG_DB_PASS}
      PG_DB_NAME: postgres
      INSTANCE_CONNECTION_NAME: ${INSTANCE_CONNECTION_NAME}

      MONGO_DB_URI: ${MONGO_DB_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}

      COUNTS_MSG_TYPES: ${COUNTS_MSG_TYPES}

      GEO_DB_NAME: ${GEO_DB_NAME}
      SSM_DB_NAME: ${SSM_DB_NAME}
      SRM_DB_NAME: ${SRM_DB_NAME}

      MAX_GEO_QUERY_RECORDS: ${MAX_GEO_QUERY_RECORDS}

      FIRMWARE_MANAGER_ENDPOINT: ${FIRMWARE_MANAGER_ENDPOINT}

      WZDX_API_KEY: ${WZDX_API_KEY}
      WZDX_ENDPOINT: ${WZDX_ENDPOINT}

      CORS_DOMAIN: ${CORS_DOMAIN}
      KEYCLOAK_ENDPOINT: http://${KEYCLOAK_DOMAIN}:8084/
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_API_CLIENT_ID: ${KEYCLOAK_API_CLIENT_ID}
      KEYCLOAK_API_CLIENT_SECRET_KEY: ${KEYCLOAK_API_CLIENT_SECRET_KEY}

      CSM_EMAIL_TO_SEND_FROM: ${CSM_EMAIL_TO_SEND_FROM}
      CSM_EMAIL_APP_USERNAME: ${CSM_EMAIL_APP_USERNAME}
      CSM_EMAIL_APP_PASSWORD: ${CSM_EMAIL_APP_PASSWORD}
      CSM_EMAILS_TO_SEND_TO: ${CSM_EMAILS_TO_SEND_TO}
      CSM_TARGET_SMTP_SERVER_ADDRESS: ${CSM_TARGET_SMTP_SERVER_ADDRESS}
      CSM_TARGET_SMTP_SERVER_PORT: ${CSM_TARGET_SMTP_SERVER_PORT}

      TIMEZONE: ${TIMEZONE}
      LOGGING_LEVEL: ${API_LOGGING_LEVEL}
    logging:
      options:
        max-size: '10m'
        max-file: '5'

  cvmanager_webapp:
    build:
      context: webapp
      dockerfile: Dockerfile
      args:
        API_URI: http://${WEBAPP_DOMAIN}:8081
        MAPBOX_TOKEN: ${MAPBOX_TOKEN}
        KEYCLOAK_HOST_URL: http://${KEYCLOAK_DOMAIN}:8084/
        COUNT_MESSAGE_TYPES: ${COUNTS_MSG_TYPES}
        VIEWER_MESSAGE_TYPES: ${VIEWER_MSG_TYPES}
        DOT_NAME: ${DOT_NAME}
        MAPBOX_INIT_LATITUDE: ${MAPBOX_INIT_LATITUDE}
        MAPBOX_INIT_LONGITUDE: ${MAPBOX_INIT_LONGITUDE}
        MAPBOX_INIT_ZOOM: ${MAPBOX_INIT_ZOOM}
        CVIZ_API_SERVER_URL: ${CVIZ_API_SERVER_URL}
        CVIZ_API_WS_URL: ${CVIZ_API_WS_URL}
    image: jpo_cvmanager_webapp:latest
    restart: always
    depends_on:
      cvmanager_keycloak:
        condition: service_healthy
    extra_hosts:
      ${WEBAPP_DOMAIN}: ${WEBAPP_HOST_IP}
      ${KEYCLOAK_DOMAIN}: ${KC_HOST_IP}
    ports:
      - '80:80'
    logging:
      options:
        max-size: '10m'

  cvmanager_postgres:
    image: postgis/postgis:15-master
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASS}
    volumes:
      - pgdb:/var/lib/postgresql/data
      - ./resources/sql_scripts:/docker-entrypoint-initdb.d
    logging:
      options:
        max-size: '10m'

  cvmanager_keycloak:
    build:
      context: ./resources/keycloak
      dockerfile: Dockerfile
      args:
        KEYCLOAK_LOGIN_THEME_NAME: ${KEYCLOAK_LOGIN_THEME_NAME}.jar
    image: jpo_cvmanager_keycloak:latest
    restart: always
    depends_on:
      - cvmanager_postgres
    extra_hosts:
      ${WEBAPP_DOMAIN}: ${WEBAPP_HOST_IP}
      ${KEYCLOAK_DOMAIN}: ${KC_HOST_IP}
    ports:
      - '8084:8080'
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      WEBAPP_ORIGIN: http://${WEBAPP_DOMAIN}
      WEBAPP_CM_ORIGIN: http://${WEBAPP_CM_DOMAIN}
      KC_HEALTH_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${PG_DB_HOST}/postgres?currentSchema=keycloak
      KC_DB_USERNAME: ${PG_DB_USER}
      KC_DB_PASSWORD: ${PG_DB_PASS}
      KC_HOSTNAME: ${KEYCLOAK_DOMAIN}
      KEYCLOAK_API_CLIENT_SECRET_KEY: ${KEYCLOAK_API_CLIENT_SECRET_KEY}
      KEYCLOAK_CM_API_CLIENT_SECRET_KEY: ${KEYCLOAK_CM_API_CLIENT_SECRET_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    command:
      - start-dev
      - --log-level=${KC_LOGGING_LEVEL}
      - --import-realm
      - --spi-theme-welcome-theme=custom-welcome
    logging:
      options:
        max-size: '10m'

volumes:
  pgdb:
    driver: local
